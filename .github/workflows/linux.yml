name: Linux builds
on:
  push:
  pull_request:
  workflow_dispatch:
permissions:
  contents: read

jobs:
  Linux_CI_build:
    permissions:
      actions: write  # for styfle/cancel-workflow-action to cancel/stop running workflows
      contents: read  # for actions/checkout to fetch code
    if: github.event_name == 'push' || github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '14'
      - name: Build minimal
        if: false
        run: |
          echo "timestamp=`git show -s --format=%at | xargs -I# date -d @# +%Y%m%d%H%M%S`" >> $GITHUB_ENV
          ./build --disable-freetype --disable-libfluidsynth --disable-mt32 --disable-screenshots
      - name: Install libraries
        run: |
          sudo apt-get update -y
          sudo apt-get install -y nasm fluidsynth libfluidsynth-dev libpcap-dev libslirp-dev libsdl-net1.2-dev libsdl2-net-dev libglu1-mesa-dev freeglut3-dev mesa-common-dev libpng-dev desktop-file-utils fakeroot fuse libgdk-pixbuf2.0-dev patchelf python3-pip python3-setuptools squashfs-tools strace util-linux zsync
          mkdir src/bin
      - name: Update build info
        shell: bash
        run: |
          export shortsha=`echo ${GITHUB_SHA} | cut -c1-7`
          export copyrightyear=`git show -s --format=%at | xargs -I# date -d @# +'%Y'`
          export updatestr=`git show -s --format=%at | xargs -I# date -d @# +'%b %d, %Y %I:%M:%S%P'`
          echo '/* auto generated */' > include/build_timestamp.h
          echo "#define UPDATED_STR \"${updatestr}\"" >> include/build_timestamp.h
          echo "#define GIT_COMMIT_HASH \"${shortsha}\""  >> include/build_timestamp.h
          echo "#define COPYRIGHT_END_YEAR \"${copyrightyear}\"" >> include/build_timestamp.h
          cat include/build_timestamp.h
      - name: Build Linux SDL2
        run: |
          top=`pwd`
          ./build-debug-sdl2
          strip -s $top/src/dosbox-x
          cp $top/src/dosbox-x $top/src/bin/dosbox-x-sdl2
      - name: Build Appimage binary
        run: |
          top=`pwd`
          set +e
          wget -O appimage-builder-x86_64.AppImage https://github.com/AppImageCrafters/appimage-builder/releases/download/v1.1.0/appimage-builder-1.1.0-x86_64.AppImage
          cp ./appimage-builder-x86_64.AppImage ./appimage-builder
          chmod +x appimage-builder
          make install DESTDIR=AppDir
          ./appimage-builder --generate
          ./appimage-builder --recipe AppImageBuilder.yml
          ls -lg
  Test_cxx11:
    permissions:
      actions: write  # for styfle/cancel-workflow-action to cancel/stop running workflows
      contents: read  # for actions/checkout to fetch code
    #if: github.event_name == 'push' || github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    if: 0
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '14'
      - name: Install libraries
        run: |
          sudo apt-get update -y
          sudo apt-get install -y nasm fluidsynth libfluidsynth-dev libpcap-dev libslirp-dev libsdl-net1.2-dev libsdl2-net-dev libglu1-mesa-dev freeglut3-dev mesa-common-dev libpng-dev
          mkdir src/bin
      - name: Build Linux SDL1
        run: |
          top=`pwd`
          ./build-debug  --enable-force-cxx11
          strip -s $top/src/dosbox-x
          cp $top/src/dosbox-x $top/src/bin/dosbox-x-sdl1
      - name: Build Linux SDL2
        run: |
          top=`pwd`
          ./build-debug-sdl2  --enable-force-cxx11
          strip -s $top/src/dosbox-x
          cp $top/src/dosbox-x $top/src/bin/dosbox-x-sdl2
      - name: Unit testing
        run: |
          top=`pwd`
          chmod +x $top/src/bin/dosbox-x-sdl1 $top/src/bin/dosbox-x-sdl2
          $top/src/bin/dosbox-x-sdl1 -tests
          $top/src/bin/dosbox-x-sdl2 -tests

